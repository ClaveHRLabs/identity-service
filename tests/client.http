### Variables
@baseUrl = http://localhost:3001
@adminKey = your-admin-key-here
@setupCode = ABCD123456
@accessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJmMjU2NjVlOS0zNThkLTQxY2UtYTc0Zi04Nzc1YmE0ODFjNDkiLCJlbWFpbCI6Im1hbmliYWJ1QGdvZXNzb3IuY29tIiwib3JnYW5pemF0aW9uSWQiOm51bGwsInR5cGUiOiJhY2Nlc3MiLCJhZGRpdGlvbmFsRGF0YSI6e30sImlhdCI6MTc0NzUwNTI0OSwiZXhwIjoxNzQ3NTA4ODQ5fQ.Gx2_P04qwMbvKB1pS1Yvz-wGkh_cJ_xRe5_k4KfG9DI

@refreshToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJmMjU2NjVlOS0zNThkLTQxY2UtYTc0Zi04Nzc1YmE0ODFjNDkiLCJlbWFpbCI6Im1hbmliYWJ1QGdvZXNzb3IuY29tIiwib3JnYW5pemF0aW9uSWQiOm51bGwsInR5cGUiOiJyZWZyZXNoIiwiaWF0IjoxNzQ3NTA1MjQ5LCJleHAiOjE3NDgxMTAwNDl9.SONyFoVxECiyX4vwkzeFeVnrda413geZwW9wziYkV0k

### Health Check
GET {{baseUrl}}/health
Accept: application/json

### Ping Service
GET {{baseUrl}}/ping
Accept: application/json

### ===== USER MANAGEMENT =====

### Create User
POST {{baseUrl}}/api/users
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "first_name": "John",
  "last_name": "Doe",
  "display_name": "John Doe",
  "organization_id": "d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e"
}

### Get Current User
GET {{baseUrl}}/api/users/me
Authorization: Bearer {{accessToken}}

### Get User by ID
GET {{baseUrl}}/api/users/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e
Accept: application/json

### Update User
PUT {{baseUrl}}/api/users/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e
Content-Type: application/json

{
  "first_name": "Johnny",
  "last_name": "Doe",
  "display_name": "Johnny Doe"
}

### Delete User
DELETE {{baseUrl}}/api/users/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e

### List Users
GET {{baseUrl}}/api/users?organization_id=d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e&status=active&limit=10&offset=0
Accept: application/json

### ===== AUTHENTICATION =====

### Step 1: Authorization Request (Browser URL - Not directly callable from HTTP client)
# GET https://accounts.google.com/o/oauth2/v2/auth?client_id=YOUR_CLIENT_ID&redirect_uri=http://localhost:3001/api/auth/callback/google&response_type=code&scope=email%20profile%20openid&access_type=offline&prompt=consent&state=random_state_string
# Note: In a real application, the user would be redirected to this URL in a browser

### Get Google OAuth Authorization URL
GET {{baseUrl}}/api/auth/google/authorize?redirect_uri=http://localhost:3001/api/auth/callback/google&state=random_state_string
Accept: application/json

### Step 2: Token Exchange for Google (After receiving authorization code from redirect)
POST {{baseUrl}}/api/auth/google
Content-Type: application/json

{
  "code": "4/0AUJR-x5TRBbfNqw5tXUb1ol5xbp7IvOpXmvaE7IGD9ir14IE9ScQNrg6fCJSBOhlRtUxyg",
  "redirect_uri": "http://localhost:3001/api/auth/callback/google",
  "state": "randomid"
}

### Step 1: Microsoft Authorization Request (Browser URL - Not directly callable from HTTP client)
# GET https://login.microsoftonline.com/common/oauth2/v2.0/authorize?client_id=YOUR_CLIENT_ID&redirect_uri=http://localhost:3001/api/auth/callback/microsoft&response_type=code&scope=user.read%20openid%20profile%20email&response_mode=query&state=random_state_string
# Note: In a real application, the user would be redirected to this URL in a browser

### Get Microsoft OAuth Authorization URL
GET {{baseUrl}}/api/auth/microsoft/authorize?redirect_uri=http://localhost:3001/api/auth/callback/microsoft&state=random_state_string
Accept: application/json

### Step 2: Token Exchange for Microsoft (After receiving authorization code from redirect)
POST {{baseUrl}}/api/auth/microsoft
Content-Type: application/json

{
  "code": "M.R3_BAY.c1f4c670-0520-c35c-e217-606a84ea3e0c",
  "redirect_uri": "http://localhost:3001/api/auth/callback/microsoft",
  "state": "random_state_string"
}

### Step 1: LinkedIn Authorization Request (Browser URL - Not directly callable from HTTP client)
# GET https://www.linkedin.com/oauth/v2/authorization?client_id=YOUR_CLIENT_ID&redirect_uri=http://localhost:3001/api/auth/callback/linkedin&response_type=code&scope=openid%20profile%20email&state=random_state_string
# Note: In a real application, the user would be redirected to this URL in a browser

### Get LinkedIn OAuth Authorization URL
GET {{baseUrl}}/api/auth/linkedin/authorize?redirect_uri=http://localhost:3001/api/auth/callback/linkedin&state=random_state_string
Accept: application/json

### Step 2: Token Exchange for LinkedIn (After receiving authorization code from redirect)
POST {{baseUrl}}/api/auth/linkedin
Content-Type: application/json

{
  "code": "AQTXr_V8YUwV8dcZjZYB-0njUUUk2v7X15umcO8P9yQuJnNV5HYoz-6FqIzQiJHM_FeOff8j6O1uCE0l38DFoySAp7olUXB9",
  "redirect_uri": "http://localhost:3001/api/auth/callback/linkedin",
  "state": "random_state_string"
}

### Send Magic Link
POST {{baseUrl}}/api/auth/magic-link
Content-Type: application/json

{
  "email": "manibabu.iitkgp@gmail.com",
  "redirect_uri": "http://localhost:3001/auth/callback"
}

### Verify Magic Link
POST {{baseUrl}}/api/auth/verify-magic-link
Content-Type: application/json

{
  "token": "a1b2c3d4e5f6g7h8i9j0"
}

### Refresh Token
POST {{baseUrl}}/api/auth/refresh-token
Content-Type: application/json

{
  "refresh_token": "{{refreshToken}}"
}

### Logout
POST {{baseUrl}}/api/auth/logout
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "refresh_token": "{{refreshToken}}"
}

### ===== ORGANIZATION PROFILES =====

### Create Organization Profile
POST {{baseUrl}}/api/organizations
Content-Type: application/json
# Optional: Include setup code if you have one
# x-setup-code: {{setupCode}}

{
  "name": "Sample Company",
  "industry": "Technology",
  "size": "50-100",
  "country": "United States",
  "website": "https://example.com",
  "description": "A sample company for testing the API",
  "logo_url": "https://example.com/logo.png",
  "primary_color": "#2563EB",
  "secondary_color": "#1E3A8A"
}

### Get Organization Profile
GET {{baseUrl}}/api/organizations/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e
Accept: application/json
# Optional: Include setup code if you have one
# x-setup-code: {{setupCode}}

### Update Organization Profile
PUT {{baseUrl}}/api/organizations/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e
Content-Type: application/json
# Optional: Include setup code if you have one
# x-setup-code: {{setupCode}}

{
  "name": "Updated Company Name",
  "description": "Updated company description",
  "primary_color": "#3B82F6"
}

### Delete Organization Profile
DELETE {{baseUrl}}/api/organizations/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e
# Optional: Include setup code if you have one
# x-setup-code: {{setupCode}}

### List Organization Profiles
GET {{baseUrl}}/api/organizations?status=active&subscription_tier=basic&limit=10&offset=0
Accept: application/json
# Optional: Include setup code if you have one
# x-setup-code: {{setupCode}}

### ===== ORGANIZATION SETUP CODES =====

### Create Setup Code (Requires Admin Authentication)
# The admin key is required, and admin name will be automatically captured
POST {{baseUrl}}/api/setup-codes
Content-Type: application/json
x-clavehr-admin-key: {{adminKey}}

{
  "organization_id": "d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e",
  "expiration_hours": 48,
  "data": {
    "team_name": "HR Team",
    "welcome_message": "Welcome to our organization!"
  }
}

### Get Organization Setup Codes
GET {{baseUrl}}/api/organizations/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e/setup-codes?includeUsed=false
Accept: application/json
# Optional: Include setup code if you have one
# x-setup-code: {{setupCode}}

### Validate Setup Code
# This endpoint will return the x-setup-code header in the response if valid
POST {{baseUrl}}/api/setup-codes/validate
Content-Type: application/json

{
  "code": "ABCD123456"
}

### Delete Setup Code (Requires Admin Authentication)
DELETE {{baseUrl}}/api/setup-codes/d9f0a3c1-db5e-4bbd-9c31-5e6d78e8c75e
x-clavehr-admin-key: {{adminKey}}

### ===== EXAMPLE: Using organization APIs with setup code =====

### Example: Create Organization with Setup Code
POST {{baseUrl}}/api/organizations
Content-Type: application/json
x-setup-code: {{setupCode}}

{
  "name": "New Organization With Setup Code",
  "industry": "Healthcare",
  "size": "10-50",
  "country": "Canada"
}