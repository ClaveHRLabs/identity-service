FROM node:alpine

# Update packages to get security fixes; aws-cli no longer required because we rely on host .npmrc
RUN apk update && apk upgrade && apk add --no-cache dumb-init bash

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Optional build arg for private registry token (do NOT bake into final image unless necessary)
ARG CODEARTIFACT_TOKEN

# Registry configuration (public + scoped)
ENV NPM_DEFAULT_REGISTRY=https://registry.npmjs.org/

# Adjust this to your CodeArtifact or private registry base if needed
ARG VSPL_SCOPE_REGISTRY=https://yfi-047028506553.d.codeartifact.ap-south-1.amazonaws.com/npm/yfi/
ENV VSPL_SCOPE_REGISTRY=${VSPL_SCOPE_REGISTRY}

# Install dependencies and prepare scoped registry
RUN rm -f ~/.npmrc && \
    echo "registry=${NPM_DEFAULT_REGISTRY}" > ~/.npmrc && \
    echo "@vspl:registry=${VSPL_SCOPE_REGISTRY}" >> ~/.npmrc && \
    if [ -n "$CODEARTIFACT_TOKEN" ]; then \
    echo "//$(echo ${VSPL_SCOPE_REGISTRY} | sed -e 's~^https://~~' -e 's~/$~~')/:_authToken=${CODEARTIFACT_TOKEN}" >> ~/.npmrc; \
    fi && \
    npm install

# Copy application code
COPY . .


# Expose the port
ARG PORT
EXPOSE ${PORT}

# Make sure node_modules is not overwritten by host volume
RUN mkdir -p /node_modules_container && \
    cp -R node_modules/. /node_modules_container/ && \
    rm -rf node_modules && \
    ln -s /node_modules_container node_modules

# Command for development mode with hot-reload
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "run", "dev"]